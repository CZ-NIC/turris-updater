# Container for compilation test against musl system
# We choose AlpineLinux because OpenWRT compiler is not as easy to setup

FROM alpine:3.11

ENV HOME /root

RUN \
  apk update upgrade && \
  apk add \
      ca-certificates curl git coreutils \
      make cmake pkgconf gcc perl perl-file-slurp \
      libtool automake autoconf autoconf-archive \
      musl-dev \
      curl-dev libevent-dev uriparser-dev \
      uthash-dev \
      lua5.1-dev \
      asciidoc bash

# libb64
RUN \
  wget "https://sourceforge.net/projects/libb64/files/libb64-1.2.1.zip" && \
  unzip "libb64-1.2.1.zip" && rm "libb64-1.2.1.zip" && \
  cd "libb64-1.2.1" && \
  CFLAGS=-fPIC make -C src && \
  cp src/libb64.a /usr/lib/ && \
  cp -r include/b64 /usr/include/ && \
  cd .. && rm -rf "libb64-1.2.1"

# argp-standalone with -fPIC
RUN \
  wget "http://www.lysator.liu.se/~nisse/misc/argp-standalone-1.3.tar.gz" && \
  tar -xzf "argp-standalone-1.3.tar.gz" && rm "argp-standalone-1.3.tar.gz" && \
  cd "argp-standalone-1.3" && \
  wget https://git.alpinelinux.org/aports/plain/main/argp-standalone/001-throw-in-funcdef.patch && \
  wget https://git.alpinelinux.org/aports/plain/main/argp-standalone/gnu89-inline.patch && \
  patch <001-throw-in-funcdef.patch && patch <gnu89-inline.patch && \
  CFLAGS=-fPIC ./configure && make && \
  cp argp.h /usr/include && cp libargp.a /usr/lib/ && \
  cd .. && rm -rf "argp-standalone-1.3"


CMD [ "bash" ]

# vim: ft=dockerfile
