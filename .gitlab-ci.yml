variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - test
  - coverage

## Build stage ###################################################################
.build:
  stage: build
  script:
    - ./bootstrap
    - ./configure
    - make
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
    - config.log

build-debian-stable:
  extends: .build
  image: registry.nic.cz/turris/updater/updater:debian

build-debian-unstable:
  extends: .build
  image: registry.nic.cz/turris/updater/updater:tests

build-alpine:
  extends: .build
  image: registry.nic.cz/turris/updater/updater:alpine

## Test stage ####################################################################
.test:
  stage: test
  image: registry.nic.cz/turris/updater/updater:tests
  before_script:
      - ./bootstrap
      - ./configure --enable-tests --enable-linters

.test-check:
  extends: .test
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
    - 'test-suite*.log'
    - 'tests/*/*.log'
    - 'tests/*/*.trs'

check:
  extends: .test-check
  script:
    - make check

valgrind-memcheck:
  extends: .test-check
  script:
    - make check-valgrind-memcheck

lint-c:
  extends: .test
  allow_failure: true
  script:
    - make lint-c

lint-lua:
  extends: .test
  allow_failure: true
  script:
    - make lint-lua

## Code Coverage stage ###########################################################
coverage:
  stage: coverage
  needs: [check]
  image: registry.nic.cz/turris/updater/updater:tests
  script:
    - ./bootstrap
    - ./configure --enable-tests --enable-code-coverage
    - make check-code-coverage V=1
    - mv updater-*-coverage updater-coverage
  coverage: '/lines\.\.\.\.\.\.: (\d+.\d+%)/'
  artifacts:
    expire_in: 1 month
    expose_as: 'Code Coverage'
    paths:
    - 'updater-coverage/'
