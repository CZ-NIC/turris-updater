LIBRARIES += src/lib/libupdater

$(O)/.gen/src/%.embedlist: $(S)/src/lib/gen_embed.sh $(S)/src/lib/embed_types.h
	$(M) GEN $@
	$(Q)mkdir -p $(dir $@)
	@# The filter-out leaves embed_types.h in. But this one is used by the script (not to be embedded, though, it's a different kind of parameter than the rest of them).
	$(Q)$< "$(SUFFIX)" $(basename $(notdir $@)) $(abspath $(filter-out $<, $^)) >$@

$(O)/.gen/src/lib/lautoload.embedlist: $(wildcard $(S)/src/lib/autoload/*.lua)
$(O)/.gen/src/lib/lautoload.embedlist: SUFFIX := .lua

$(O)/.gen/src/lib/lcoverage.embedlist: $(S)/src/lib/coverage.lua
$(O)/.gen/src/lib/lcoverage.embedlist: SUFFIX := .lua

ifdef BUSYBOX_EXEC
# We have to ignore this if not provided to avoid error
$(O)/.gen/src/lib/busybox_exec.embedlist:$(BUSYBOX_EXEC)
endif

libupdater_MODULES := \
	arguments \
	inject \
	interpreter \
	unpacker \
	lautoload.embed \
	embed_types \
	events \
	subprocess \
	download \
	uri \
	uri_lua \
	journal \
	locks \
	picosat \
	util \
	syscnf \
	multiwrite \
	logging
ifdef COV
libupdater_MODULES += lcoverage.embed
endif
ifdef BUSYBOX_EXEC
libupdater_MODULES += busybox_exec.embed
endif

libupdater_MODULES_3RDPARTY := picosat-965/picosat

libupdater_PKG_CONFIGS := $(LUA_NAME) libevent libcurl libcrypto
# Workaround, lua.pc doesn't containd -ldl, even when it uses dlopen
libupdater_SO_LIBS += dl b64
ifneq ($(ARGP_STANDALONE),)
libupdater_SO_LIBS += argp
endif

# We require liburiparser at least in version 0.9.0. We can build our version if needed be.
ifeq ($(shell pkg-config liburiparser --atleast-version=0.9.0 && echo $$?),0)
libupdater_PKG_CONFIGS += liburiparser
else
URIPARSER_SRC := https://github.com/uriparser/uriparser/releases/download/uriparser-0.9.1/uriparser-0.9.1.tar.bz2

$(O)/.uriparser/.libs/liburiparser.a:
	mkdir -p "$(O)/.uriparser"
	curl -L $(URIPARSER_SRC) | tar -xjf - -C "$(O)/.uriparser" --strip-components=1
	cd "$(O)/.uriparser" && ./configure --with-pic --disable-test --disable-doc --disable-shared
	+$(MAKE) -C "$(O)/.uriparser"

libupdater_EXTRA_INCLUDES := $(O)/.uriparser/include
libupdater_EXTRA_DEPENDS := $(O)/.uriparser/.libs/liburiparser.a
libupdater_LDFLAGS += $(O)/.uriparser/.libs/liburiparser.a

.PHONY: clean-uriparser
clean-uriparser:
	rm -rf "$(O)/.uriparser"

endif

LIB_DOCS := \
	journal \
	objects
DOCS += $(addprefix src/lib/,lua_funcs $(LIB_DOCS))
